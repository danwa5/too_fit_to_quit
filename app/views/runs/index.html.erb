<div class="page-header">
  <div class="pod">
    <h2 class="is-2">Runs</h2>
  </div>
</div>

<div class="columns is-multiline">
  <div class="column is-one-quarter">
    <div class="pod">
      <%= form_tag(runs_path, method: :get, class: 'run-search-form') do |f| %>
        <div class="form-group">
          <%= label_tag :date, nil, class: " col-xs-12 control-label" %>
          <div class="col-xs-6 col-sm-6">
            <%= text_field_tag :start_date, (params[:start_date] || Date.today - 90), { class: 'form-control', placeholder: 'From' } %>
          </div>
          <div class="col-xs-6 col-sm-6">
            <%= text_field_tag :end_date, params[:end_date], { class: 'form-control', placeholder: 'To' } %>
          </div>
        </div>
        <div class="form-group">
          <%= label_tag :distance, "Distance (miles)", class: "col-xs-12 control-label" %>
          <div class="col-xs-6 col-sm-6">
            <%= text_field_tag :distance_min, params[:distance_min], { class: 'form-control', placeholder: 'min' } %>
          </div>
          <div class="col-xs-6 col-sm-6">
            <%= text_field_tag :distance_max, params[:distance_max], { class: 'form-control', placeholder: 'max' } %>
          </div>
        </div>
        <div class="form-group">
          <%= label_tag :duration, "Duration (minutes)", class: "col-xs-12 control-label" %>
          <div class="col-xs-6 col-sm-6">
            <%= text_field_tag :duration_min, params[:duration_min], { class: 'form-control', placeholder: 'min' } %>
          </div>
          <div class="col-xs-6 col-sm-6">
            <%= text_field_tag :duration_max, params[:duration_max], { class: 'form-control', placeholder: 'max' } %>
          </div>
        </div>
        <div class="form-group">
          <%= label_tag :steps, nil, class: "col-xs-12 control-label" %>
          <div class="col-xs-6 col-sm-6">
            <%= text_field_tag :steps_min, params[:steps_min], { class: 'form-control', placeholder: 'min' } %>
          </div>
          <div class="col-xs-6 col-sm-6">
            <%= text_field_tag :steps_max, params[:steps_max], { class: 'form-control', placeholder: 'max' } %>
          </div>
        </div>
        <div class="form-group">
          <%= label_tag :location, nil, class: "control-label" %>
          <%= select_tag :location, options_from_collection_for_select(@locations, 'location', 'location', params[:location]), { include_blank: true } %>
        </div>
        <script>
          $(function() {
            $('#location').selectize({ allowEmptyOption: true, sortField: 'text' });
          });
        </script>
        <%= submit_tag 'Search', class: 'btn btn-primary search-button' %>
      <% end %>
    </div>
  </div>
  <div class="column is-three-quarters">
    <div class="pod">
      <div id="chart-monthly-breakdown" class="has-text-centered">
        <h5>Monthly Breakdown</h5>
      </div>
    </div>
  </div>
</div>

<div class="columns">
  <div class="column">
    <div class="pod">
      <div class="table-responsive">
        <table id="runs-table" class="table table-condensed table-hover">
          <thead>
            <tr>
              <th>Date</th>
              <th>Distance<br>(miles)</th>
              <th>Duration<br>(H:MM:SS)</th>
              <th>Pace<br>(min/mile)</th>
              <th>Steps</th>
              <th>Location</th>
              <th></th>
            </tr>
          </thead>
          <tbody>
          <% @dataset.each do |run| %>
            <tr>
              <td class="runs-date"><%= format_run_time(run.start_time) %></td>
              <td class="runs-distance"><%= format_distance(run.distance) %></td>
              <td class="runs-duration"><%= format_duration(run.duration) %></td>
              <td class="runs-pace"><%= format_pace(run.duration, run.distance) %></td>
              <td class="runs-steps"><%= run.steps %></td>
              <td class="runs-location"><%= run.location %></td>
              <td align="center"><%= link_to 'Details', run_path(run.id) %></td>
            </tr>
          <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<script>
var months = {1:'Jan', 2:'Feb', 3:'Mar', 4:'Apr', 5:'May', 6:'Jun', 7:'July', 8:'Aug', 9:'Sep', 10:'Oct', 11:'Nov', 12:'Dec'};

var dataset = <%= raw @monthly_breakdown.to_json %>;

// set the dimensions and margins of the graph
var margin = {top: 10, right: 40, bottom: 40, left: 50},
    width = 800 - margin.left - margin.right,
    height = 405 - margin.top - margin.bottom;

// set the ranges
var x0 = d3.scaleBand().rangeRound([0, width]).padding(0.3);
var x1 = d3.scaleBand().rangeRound([0, width]);
var y = d3.scaleLinear().range([height, 0]);
var color = d3.scaleOrdinal().range(["#8a89a6", "#d0743c"]);

// append the svg object to the body of the page
// append a 'group' element to 'svg'
// moves the 'group' element to the top left margin
var svg = d3.select("#chart-monthly-breakdown").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var years = d3.keys(dataset[0]).filter(function(key) { return key.startsWith('total_'); });

var max_totals_by_month = [];
dataset.forEach(function(d) {
  max_totals_by_month.push(Math.max(d[years[0]], d[years[1]]));
})

var max_total = d3.max(max_totals_by_month);

function make_y_gridlines() {
  return d3.axisLeft(y).ticks(max_total)
}

// format the data
dataset.forEach(function(d) {
  d.month = months[d.month];
  d.totals = years.map(function(name) { return {name: name, total: +d[name]}; });
});

// scale the range of the data in the domains
x0.domain(dataset.map(function(d) { return d.month; }));
x1.domain(years).range([0, x0.bandwidth()]);
y.domain([0, d3.max(dataset, function(d) { return d3.max(d.totals, function(d2) { return d2.total; }); })]);


//add the y axis grid lines
svg.append("g")
  .attr("class", "grid")
  .call(make_y_gridlines()
    .tickSize(-width)
    .tickFormat("")
  );

var month = svg.selectAll(".month")
      .data(dataset)
    .enter().append("g")
      .attr("class", "month")
      .attr("transform", function(d) { return "translate(" + x0(d.month) + ",0)"; });

month.selectAll("rect")
      .data(function(d) { return d.totals; })
    .enter().append("rect")
      .attr("width", x1.bandwidth())
      .attr("x", function(d) { return x1(d.name); })
      .attr("y", function(d) { return y(d.total); })
      .attr("height", function(d) { return height - y(d.total); })
      .style("fill", function(d) { return color(d.name); });

// add the x Axis
svg.append("g")
    .attr("transform", "translate(0," + height + ")")
    .call(d3.axisBottom(x0))
  .append("text")
    .attr("class", "axis-title")
    .attr("dx", ".71em")
    .style("text-anchor", "middle")
    .attr("transform", "translate("+ (width/2) +",40)");

// add the y Axis
svg.append("g")
    .call(d3.axisLeft(y).ticks(max_total))
  .append("text")
    .attr("class", "axis-title")
    .attr("transform", "rotate(-90)")
    .attr("y", -40)
    .attr("x", 0 - (height / 2))
    .attr("dy", ".71em")
    .style("text-anchor", "middle")
    .text("Monthly Total")
  .append("text")
        .attr("x", (width / 2))
        .attr("y", 0 - (margin.top / 2))
        .attr("text-anchor", "middle")
        .style("font-size", "16px")
        .style("text-decoration", "underline")
        .text("Value vs Date Graph");;

// add the legend
var legend = svg.selectAll(".legend")
      .data(years.slice())
    .enter().append("g")
      .attr("class", "legend")
      .attr("transform", function(d, i) {
        return "translate(0," + i * 20 + ")";
      });

legend.append("rect")
  .attr("x", width - 18)
  .attr("width", 18)
  .attr("height", 18)
  .style("fill", color);

legend.append("text")
  .attr("x", width - 24)
  .attr("y", 10)
  .attr("dy", ".25em")
  .style("text-anchor", "end")
  .text(function(d) {
    return d.substr(d.length-4);
  });
</script>
